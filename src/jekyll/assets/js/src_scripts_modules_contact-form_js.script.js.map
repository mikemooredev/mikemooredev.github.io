{"version":3,"sources":["webpack://mikemooredev/./src/scripts/modules/contact-form.js","webpack://mikemooredev/./src/scripts/modules/module/Module.js"],"names":["setupData","els","formEl","addEventListener","e","contactFormSubmit","data","formIsValid","mail","options","apiKey","apiUri","apiVersion","preventDefault","contactFormValidate","window","grecaptcha","ready","execute","recaptchaSitekey","then","token","onRecaptchaVerify","notificationEl","notificationHTML","innerHTML","inputEl","value","length","classList","add","setNotificationHTML","remove","validateInput","nameEl","nameNotificationEl","emailEl","emailNotificationEl","validateEmail","phoneEl","phoneNotificationEl","validatePhone","messageEl","messageNotificationEl","recaptchaToken","console","log","eeClient","require","bodyText","ee","Account","Load","resp","emailParams","Email","Send","catch","err","result","success","to","regexTest","text","regex","test","el","dataset","recaptchaSize","Module","element","setupModule","identifier","module","bindMethods","defaultMethods","methods","setupEls","setupListeners","setupModel","setupInputListeners","methodNames","forEach","method","bind","replace","m","w","toUpperCase","querySelectorAll","alias","getElementAlias","singleElAlias","pluralElAlias","modelEl","querySelector","push","model","elKeys","filter","elKey","inputTypes","includes","nodeName","modelElKeys","target","Object","keys"],"mappings":"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","file":"src_scripts_modules_contact-form_js.script.js","sourcesContent":["import Module from './module/Module'\n\nexport default class extends Module {\n\n  initialize() {\n    this.setupData()\n  }\n\n  setupListeners() {\n    if (this.els.formEl) {\n      this.els.formEl.addEventListener('submit', e => this.contactFormSubmit(e))\n    }\n  }\n\n  setupData() {\n    this.data = {\n      formIsValid: true,\n      mail: {\n        options: {\n          apiKey: 'C7DAC08514BC176826913DA29764F86BCF44E5317EE8CBE061253A814DAB6959E6D5B610E6F5E05513F4AD19E6679463',\n          apiUri: 'https://api.elasticemail.com/',\n          apiVersion: 'v2'\n        }\n      }\n    }\n  }\n\n  contactFormSubmit(e) {\n    e.preventDefault()\n    if (this.contactFormValidate()) {\n\n      window.grecaptcha.ready(() => {\n        // do request for recaptcha token\n        // response is promise with passed token\n        window.grecaptcha.execute(this.recaptchaSitekey)\n          .then(token => {\n            // add token value to form\n            this.onRecaptchaVerify(token)\n          });\n      });\n\n    }\n  }\n\n  setNotificationHTML(notificationEl, notificationHTML) {\n    if (notificationEl) {\n      notificationEl.innerHTML = notificationHTML;\n    }\n  }\n\n  validateInput(inputEl, notificationEl, notificationHTML) {\n    if (inputEl) {\n      if (!inputEl.value.length) {\n        inputEl.classList.add('isDanger')\n        this.data.formIsValid = false;\n        this.setNotificationHTML(notificationEl, notificationHTML)\n      } else {\n        inputEl.classList.remove('isDanger')\n        this.setNotificationHTML(notificationEl, '')\n        return true\n      }\n    }\n    return false\n  }\n\n  contactFormValidate() {\n\n    this.data.formIsValid = true;\n\n    this.validateInput(this.els.nameEl, this.els.nameNotificationEl, 'Please enter your name.')\n    this.validateInput(this.els.emailEl, this.els.emailNotificationEl, 'Please enter a valid email address.')\n    this.validateEmail(this.els.emailEl, this.els.emailNotificationEl, 'Please enter a valid email address.')\n    this.validateInput(this.els.phoneEl, this.els.phoneNotificationEl, 'Please enter a valid phone number.')\n    this.validatePhone(this.els.phoneEl, this.els.phoneNotificationEl, 'Please enter a valid phone number.')\n    this.validateInput(this.els.messageEl, this.els.messageNotificationEl, 'Please enter a message.')\n\n    return this.data.formIsValid;\n\n  }\n\n  onRecaptchaVerify(recaptchaToken) {\n\n    console.log(recaptchaToken)\n\n    const eeClient = require('elasticemail-webapiclient').client;\n\n    const bodyText = `Name: ${this.els.nameEl.value} \\r\\n` +\n      `Email: ${this.els.emailEl.value} \\r\\n` +\n      `Phone: ${this.els.phoneEl.value} \\r\\n` +\n      `Message: ${this.els.messageEl.value} \\r\\n\\r\\n`;\n\n    //const ee = new elasticemail(this.data.mail.options);\n\n    const ee = new eeClient(this.data.mail.options);\n\n    // Load account data\n    ee.Account.Load().then(function (resp) {\n      console.log(resp);\n    });\n\n    const emailParams = {\n      \"subject\": 'New Enquiry',\n      \"to\": 'me@mikemoore.dev',\n      \"from\": 'noreply@mikemoore.dev',\n      \"fromName\": this.els.nameEl.value,\n      \"sender\": this.els.emailEl.value,\n      \"senderName\": this.els.nameEl.value,\n      \"replyTo\": this.els.emailEl.value,\n      \"replyToName\": this.els.nameEl.value,\n      \"bodyText\": bodyText,\n      \"bodyType\": 'Plain',\n      \"isTransactional\": true\n    };\n\n    ee.Email.Send(emailParams)\n      .catch((err) => {\n        this.setNotificationHTML(this.els.notificationEl, `<p class=\"isDanger boxed\">${err}</p>`)\n      })\n      .then((result) => {\n\n        if (result.success) {\n          this.setNotificationHTML(this.els.notificationEl, `<p class=\"isSuccess boxed\">Thank you for getting in touch, I'll get back to you as soon as possible.</p>`)\n        } else {\n          this.setNotificationHTML(this.els.notificationEl, `<p class=\"isDanger boxed\">Oops, it looks like something went wrong, please email me directly at <a href=\"mailto:${emailParams.to}\" title=\"Direct email: ${emailParams.to}\">${emailParams.to}</a></p>`)\n        }\n\n      });\n\n  }\n\n  onRecaptchaExpired() {\n    this.setNotificationHTML(this.els.notificationEl, `<p class=\"isDanger\">There has been an error processing your enquiry, please refresh the page and try again.</p>`)\n  }\n\n  validateEmail(emailEl, notificationEl, notificationHTML) {\n    if (emailEl && emailEl.value.length && this.regexTest(emailEl.value, /\\S+@\\S+\\.\\S+/)) {\n      return true\n    }\n    this.setNotificationHTML(notificationEl, notificationHTML)\n    return false\n  }\n\n  validatePhone(phoneEl, notificationEl, notificationHTML) {\n    if (phoneEl && phoneEl.value.length && this.regexTest(phoneEl.value, /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s./0-9]*$/)) {\n      return true\n    }\n    this.setNotificationHTML(notificationEl, notificationHTML)\n    return false\n  }\n\n  regexTest(text, regex) {\n    return regex.test(text);\n  }\n\n  get recaptchaSize() {\n    return this.el && this.el.dataset && this.el.dataset.recaptchaSize ? this.el.dataset.recaptchaSize : null\n  }\n  get recaptchaSitekey() {\n    return this.el && this.el.dataset && this.el.dataset.recaptchaSitekey ? this.el.dataset.recaptchaSitekey : null\n  }\n\n  get methods() {\n    return [\n      'setupData',\n      'contactFormSubmit',\n      'contactFormValidate',\n      'onRecaptchaVerify',\n      'onRecaptchaExpired',\n      'validateEmail',\n      'validatePhone',\n      'validateInput',\n      'regexTest',\n      'setNotificationHTML'\n    ]\n  }\n\n}","export default class Module {\n\n  constructor(element) {\n\n    this.setupModule(element)\n\n  }\n\n  initialize() { }\n\n  setupListeners() { }\n\n  setupModule(element) {\n\n    this.el = element\n    this.identifier = element.dataset.module\n    this.data = element.dataset\n    this.els = {}\n\n    this.bindMethods(this.defaultMethods)\n    this.bindMethods(this.methods)\n\n    this.setupEls()\n    this.setupListeners()\n    this.setupModel()\n    this.setupInputListeners()\n  }\n\n  bindMethods(methodNames) {\n    methodNames.forEach(method => {\n      this[method] = this[method].bind(this)\n    })\n  }\n\n  getElementAlias(element) {\n    return element.dataset.el.replace(`${this.identifier}.`, \"\")\n      .replace(/-([a-z])/g, function (m, w) {\n        return w.toUpperCase();\n      })\n  }\n\n  setupEls() {\n\n    const els = this.el.querySelectorAll(`[data-el^=\"${this.identifier}\"]`)\n\n    els.forEach(el => {\n\n      const alias = this.getElementAlias(el)\n\n      const singleElAlias = `${alias}El`\n      const pluralElAlias = `${singleElAlias}s`\n\n      this.els[singleElAlias] = this.els[singleElAlias] ? this.els[singleElAlias] : el\n      this.els[pluralElAlias] = typeof this.els[pluralElAlias] === \"object\" ? this.els[pluralElAlias] : []\n\n      const modelEl = this.el.querySelector(`[data-model=\"${this.identifier}.${alias}\"]`)\n\n      if (modelEl) {\n        el.modelEl = modelEl\n      }\n\n      this.els[pluralElAlias].push(el)\n    })\n\n  }\n\n  setupModel() {\n    this.model = {}\n    this.elKeys\n      .filter(elKey => this.inputTypes.includes(this.els[elKey].nodeName))\n      .forEach(elKey => {\n        this.model[this.getElementAlias(this.els[elKey])] = \"\"\n      })\n  }\n\n  setupInputListeners() {\n    this.modelElKeys\n      .forEach(elKey => {\n\n        if (this.els[elKey].modelEl) {\n\n          this.els[elKey].addEventListener('input', ({ target }) => {\n            this.model[this.getElementAlias(this.els[elKey])] = target.value\n            this.els[elKey].modelEl.innerHTML = target.value\n          })\n\n        }\n      })\n  }\n\n  get elKeys() {\n    return Object.keys(this.els)\n  }\n\n  get modelElKeys() {\n    return this.elKeys.filter(elKey => this.inputTypes.includes(this.els[elKey].nodeName))\n  }\n\n  get inputTypes() {\n    return [\n      'INPUT',\n      'TEXTAREA'\n    ]\n  }\n\n  get defaultMethods() {\n    return [\n      'initialize',\n      'setupModule',\n      'setupEls',\n      'setupListeners',\n      'setupInputListeners',\n      'getElementAlias'\n    ]\n  }\n\n  get methods() {\n    return []\n  }\n\n}"],"sourceRoot":""}