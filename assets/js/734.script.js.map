{"version":3,"sources":["webpack://mikemooredev/./src/scripts/modules/module/Module.js"],"names":["Module","element","this","setupModule","el","identifier","dataset","module","data","els","bindMethods","defaultMethods","methods","setupEls","setupListeners","setupModel","setupInputListeners","methodNames","forEach","method","bind","replace","m","w","toUpperCase","querySelectorAll","alias","getElementAlias","singleElAlias","pluralElAlias","modelEl","querySelector","push","model","elKeys","filter","elKey","inputTypes","includes","nodeName","modelElKeys","addEventListener","target","value","innerHTML","Object","keys"],"mappings":"qqBAAqBA,E,WAEnB,WAAYC,I,4FAAS,SAEnBC,KAAKC,YAAYF,G,+CAInB,c,4BAEA,c,yBAEA,SAAYA,GAEVC,KAAKE,GAAKH,EACVC,KAAKG,WAAaJ,EAAQK,QAAQC,OAClCL,KAAKM,KAAOP,EAAQK,QACpBJ,KAAKO,IAAM,GAEXP,KAAKQ,YAAYR,KAAKS,gBACtBT,KAAKQ,YAAYR,KAAKU,SAEtBV,KAAKW,WACLX,KAAKY,iBACLZ,KAAKa,aACLb,KAAKc,wB,yBAGP,SAAYC,GAAa,WACvBA,EAAYC,SAAQ,SAAAC,GAClB,EAAKA,GAAU,EAAKA,GAAQC,KAAK,Q,6BAIrC,SAAgBnB,GACd,OAAOA,EAAQK,QAAQF,GAAGiB,QAAnB,UAA8BnB,KAAKG,WAAnC,KAAkD,IACtDgB,QAAQ,aAAa,SAAUC,EAAGC,GACjC,OAAOA,EAAEC,mB,sBAIf,WAAW,WAEGtB,KAAKE,GAAGqB,iBAAR,qBAAuCvB,KAAKG,WAA5C,OAERa,SAAQ,SAAAd,GAEV,IAAMsB,EAAQ,EAAKC,gBAAgBvB,GAE7BwB,EAAgB,GAAH,OAAMF,EAAN,MACbG,EAAgB,GAAH,OAAMD,EAAN,KAEnB,EAAKnB,IAAImB,GAAiB,EAAKnB,IAAImB,GAAiB,EAAKnB,IAAImB,GAAiBxB,EAC9E,EAAKK,IAAIoB,GAAoD,WAAnC,EAAO,EAAKpB,IAAIoB,IAA8B,EAAKpB,IAAIoB,GAAiB,GAElG,IAAMC,EAAU,EAAK1B,GAAG2B,cAAR,uBAAsC,EAAK1B,WAA3C,YAAyDqB,EAAzD,OAEZI,IACF1B,EAAG0B,QAAUA,GAGf,EAAKrB,IAAIoB,GAAeG,KAAK5B,Q,wBAKjC,WAAa,WACXF,KAAK+B,MAAQ,GACb/B,KAAKgC,OACFC,QAAO,SAAAC,GAAK,OAAI,EAAKC,WAAWC,SAAS,EAAK7B,IAAI2B,GAAOG,aACzDrB,SAAQ,SAAAkB,GACP,EAAKH,MAAM,EAAKN,gBAAgB,EAAKlB,IAAI2B,KAAW,Q,iCAI1D,WAAsB,WACpBlC,KAAKsC,YACFtB,SAAQ,SAAAkB,GAEH,EAAK3B,IAAI2B,GAAON,SAElB,EAAKrB,IAAI2B,GAAOK,iBAAiB,SAAS,YAAgB,IAAbC,EAAa,EAAbA,OAC3C,EAAKT,MAAM,EAAKN,gBAAgB,EAAKlB,IAAI2B,KAAWM,EAAOC,MAC3D,EAAKlC,IAAI2B,GAAON,QAAQc,UAAYF,EAAOC,c,kBAOrD,WACE,OAAOE,OAAOC,KAAK5C,KAAKO,O,uBAG1B,WAAkB,WAChB,OAAOP,KAAKgC,OAAOC,QAAO,SAAAC,GAAK,OAAI,EAAKC,WAAWC,SAAS,EAAK7B,IAAI2B,GAAOG,e,sBAG9E,WACE,MAAO,CACL,QACA,c,0BAIJ,WACE,MAAO,CACL,aACA,cACA,WACA,iBACA,sBACA,qB,mBAIJ,WACE,MAAO,Q","file":"734.script.js","sourcesContent":["export default class Module {\n\n  constructor(element) {\n\n    this.setupModule(element)\n\n  }\n\n  initialize() { }\n\n  setupListeners() { }\n\n  setupModule(element) {\n\n    this.el = element\n    this.identifier = element.dataset.module\n    this.data = element.dataset\n    this.els = {}\n\n    this.bindMethods(this.defaultMethods)\n    this.bindMethods(this.methods)\n\n    this.setupEls()\n    this.setupListeners()\n    this.setupModel()\n    this.setupInputListeners()\n  }\n\n  bindMethods(methodNames) {\n    methodNames.forEach(method => {\n      this[method] = this[method].bind(this)\n    })\n  }\n\n  getElementAlias(element) {\n    return element.dataset.el.replace(`${this.identifier}.`, \"\")\n      .replace(/-([a-z])/g, function (m, w) {\n        return w.toUpperCase();\n      })\n  }\n\n  setupEls() {\n\n    const els = this.el.querySelectorAll(`[data-el^=\"${this.identifier}\"]`)\n\n    els.forEach(el => {\n\n      const alias = this.getElementAlias(el)\n\n      const singleElAlias = `${alias}El`\n      const pluralElAlias = `${singleElAlias}s`\n\n      this.els[singleElAlias] = this.els[singleElAlias] ? this.els[singleElAlias] : el\n      this.els[pluralElAlias] = typeof this.els[pluralElAlias] === \"object\" ? this.els[pluralElAlias] : []\n\n      const modelEl = this.el.querySelector(`[data-model=\"${this.identifier}.${alias}\"]`)\n\n      if (modelEl) {\n        el.modelEl = modelEl\n      }\n\n      this.els[pluralElAlias].push(el)\n    })\n\n  }\n\n  setupModel() {\n    this.model = {}\n    this.elKeys\n      .filter(elKey => this.inputTypes.includes(this.els[elKey].nodeName))\n      .forEach(elKey => {\n        this.model[this.getElementAlias(this.els[elKey])] = \"\"\n      })\n  }\n\n  setupInputListeners() {\n    this.modelElKeys\n      .forEach(elKey => {\n\n        if (this.els[elKey].modelEl) {\n\n          this.els[elKey].addEventListener('input', ({ target }) => {\n            this.model[this.getElementAlias(this.els[elKey])] = target.value\n            this.els[elKey].modelEl.innerHTML = target.value\n          })\n\n        }\n      })\n  }\n\n  get elKeys() {\n    return Object.keys(this.els)\n  }\n\n  get modelElKeys() {\n    return this.elKeys.filter(elKey => this.inputTypes.includes(this.els[elKey].nodeName))\n  }\n\n  get inputTypes() {\n    return [\n      'INPUT',\n      'TEXTAREA'\n    ]\n  }\n\n  get defaultMethods() {\n    return [\n      'initialize',\n      'setupModule',\n      'setupEls',\n      'setupListeners',\n      'setupInputListeners',\n      'getElementAlias'\n    ]\n  }\n\n  get methods() {\n    return []\n  }\n\n}"],"sourceRoot":""}